#include <stdio.h>
#include <math.h>
#include <assert.h>
#include <limits.h>

// --------------------

// Festa da ProgramaÃ§Ã£o
// 14 de Novembro
// Autor: João Castelo
// ID Mooshak: João_Castelo_12781

// --------------------

int max(int x, int y)
{
  return x <= y ? y : x;
}

int min(int x, int y)
{
  return x <= y ? x : y;
}

int ints_get(int *a)
{
  int result = 0;
  int x;
  while (scanf("%d", &x) != EOF)
    a[result++] = x;
  return result;
}

void ints_println_basic(const int *a, int n)
{
  if (n > 0)
  {
    printf("%d", a[0]);
    for (int i = 1; i < n; i++)  // i = 1
      printf(" %d", a[i]);
  }
  printf("\n");
}

int ints_sum(const int *a, int n) // soma valores array
{
  int result = 0;
  for (int i = 0; i < n; i++)
    result += a[i];
  return result;
}

int ints_max(const int *a, int n) // valor max array de tamanho n
{
  int result = INT_MIN;
  for (int i = 0; i < n; i++)
    if (result < a[i])
      result = a[i];
  return result;
}

int ints_min(const int *a, int n)
{
  int result = INT_MAX;
  for (int i = 0; i < n; i++)
    if (result > a[i])
      result = a[i];
  return result;
}

int ints_equal_arrays(const int *a, const int n, const int *b, int m)
{
  int result = n == m;
  int i = 0;
  while (result && i < n)
    if (a[i] != b[i])
      result = 0;
    else
      i++;
  return result;
}

// --------------------

int doubles_get(double *a)
{
  int result = 0;
  double x;
  while (scanf("%lf", &x) != EOF)
    a[result++] = x;
  return result;
}

void doubles_println_basic(const double *a, int n)
{
  if (n > 0)
  {
    printf("%g", a[0]);
    for (int i = 1; i < n; i++)  // i = 1
      printf(" %g", a[i]);
  }
  printf("\n");
}

double doubles_sum(const double *a, int n)
{
  double result = 0;
  for (int i = 0; i < n; i++)
    result += a[i];
  return result;
}

double doubles_max(const double *a, int n)
{
  double result = -INFINITY;
  for (int i = 0; i < n; i++)
    if (result < a[i])
      result = a[i];
  return result;
}

double doubles_min(const double *a, int n)
{
  double result = +INFINITY;
  for (int i = 0; i < n; i++)
    if (result > a[i])
      result = a[i];
  return result;
}

// --------------------
// Problema B

int count(const int *a, int n)
{
  int result = 0;
  for (int i = 0; i < n; i++)
  {
    if (a[i] >= 3)
      result++;
  }
  return result;
}

int ints_sums_by_tuple (const int *a, int n, int x, int *b)
{
  int result = 0;
  for (int i = 0; i < n; i += x)
    b[result++] = count(a+i, min(x, n - i));
  return result;
}

// --------------------

void test_problem_B(void)
{
  int x;
  int a[1000];
  scanf("%d", &x);
  int n = ints_get(a);
  int b[1000];
  int m = ints_sums_by_tuple(a, n, x, b);
  ints_println_basic(b, m);
}

// --------------------

int main(void)
{
  test_problem_B();
  return 0;
}


